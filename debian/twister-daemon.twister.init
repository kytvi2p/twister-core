#!/bin/sh

### BEGIN INIT INFO
# Provides:          twister
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start and stop the twister daemon
# Description: twister is an experimental P2P microblogging platform
### END INIT INFO

# Author: Kill Your TV <killyourtv@i2pmail.org>

PATH="/sbin:/usr/sbin:/bin:/usr/bin"
DESC="twister daemon"
NAME="twisterd"
DAEMON="/usr/lib/twister/twisterd"
DAEMON_ARGS=""
PIDFILE="/run/twister/$NAME.pid"
USER="twister"
ARGS="-conf=/etc/twister.conf -pid=$PIDFILE -datadir=/var/lib/twister -htmldir=/usr/share/twister-html -daemon=1 -server=1"

[ -x $DAEMON ] || exit 0

[ -r /etc/default/$NAME ] && . /etc/default/$NAME
. /lib/init/vars.sh
. /lib/lsb/init-functions

if [ ! -d $(dirname $PIDFILE) ]; then
    mkdir -p $(dirname $PIDFILE)
fi

chown ${USER}:${USER} $(dirname $PIDFILE)


do_start()
{
  start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --chuid "$USER" --test > /dev/null \
    || return 1
  touch $PIDFILE
  chown ${USER}:${USER} $PIDFILE
  umask 0002
  start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --chuid "$USER" -- \
    $ARGS $DAEMON_ARGS || return 2
}

do_stop()
{
  start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
  RETVAL="$?"
  [ "$RETVAL" = 2 ] && return 2
  start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON
  [ "$?" = 2 ] && return 2
  rm -f $PIDFILE
  return "$RETVAL"
}

case "$1" in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC " "$NAME"
    do_start
    case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
  ;;
  stop)
  [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
  do_stop
  case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
  ;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  restart|force-reload)
  log_daemon_msg "Restarting $DESC" "$NAME"
  do_stop
  case "$?" in
    0|1)
    do_start
    case "$?" in
      0) log_end_msg 0 ;;
      1) log_end_msg 1 ;; # Old process is still running
      *) log_end_msg 1 ;; # Failed to start
    esac
    ;;
    *)
      # Failed to stop
    log_end_msg 1
    ;;
  esac
  ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|force-reload}" >&2
    exit 3
  ;;
esac

:
